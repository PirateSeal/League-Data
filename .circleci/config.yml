# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Server/build.gradle" }}

      - run: cd Server && gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "Server/build.gradle" }}

      # run tests!
      - run: cd Server && gradle build

      - store_artifacts:
          path: Server/build/libs/server-0.0.1-SNAPSHOT.jar

      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: Server
          # Must be relative path from root
          paths:
            - build/libs
  dockerise:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: Server/build/libs
      - checkout
      - setup_remote_docker
      # start proprietary DB using private Docker image
      # with credentials stored in the UI
      - run: ls
      - run: ls Server
      - run: ls Server/build
      - run: ls Server/build/libs

      # build the application image
      - run: docker build -t company/app:$CIRCLE_BRANCH .

      # deploy the image
      - run: docker push company/app:$CIRCLE_BRANCH

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - dockerise:
          requires:
            - build
